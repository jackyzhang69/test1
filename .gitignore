######################
# Python             #
######################

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
.vscode/
service_venv/
# C extensions
*.so
tests/
# Distribution / packaging
.Python
env/
client/js/fillform/build
collectdata/build
collectdata/dist
develop-eggs/
dist/
downloads/
eggs/
formbro/storage/
.eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

# node.js
private/
node_modules/
screenshots/
upload/
# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*,cover
.hypothesis/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py

# Flask instance folder
instance/

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# IPython Notebook
.ipynb_checkpoints

# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule

# dotenv
.env
.env_deta
.pro_env
# deta
.deta

# virtualenv
venv/
svenv/
cvenv/
ENV/
st_venv/
visa_venv/
base_venv/
service_venv/*
# Spyder project settings
.spyderproject

# Others
.project
.settings
.classpath
.idea

######################
# Node               #
######################

# Logs
logs
*.log
npm-debug.log*

# Runtime data
pids
*.pid
*.seed

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules
jspm_packages

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

######################
# OS generated files #
######################

__MACOSX
.DS_Store
._*

.Spotlight-V100
.Trashes

ehthumbs.db
Thumbs.db

############
# Packages #
############
# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip
.DS_Store

######################
# Sencha             #
######################
#bootstrap.js
#bootstrap.css
#example.css
#ext #we check in the gpl this time

temp/
build/development/
build/testing/
ext/build/
#build/ In case of Docker, do not exclude the build/production folder
touch/
dist/
.sencha_backup/
.sencha
*slicer-temp*
gwt-unitCache
.sass-cache/

external-bin/

journal.md

.local-chromium/
.env.template

# System files
.DS_Store

# Temporary files
tmp/
